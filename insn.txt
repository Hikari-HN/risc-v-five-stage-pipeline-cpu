02021037     // lui x0,0x2021     #写0寄存器
000010B7     // lui x1,0x1
00002137     // lui x2,0x2
000031B7     // lui x3,0x3
00208233     // add x4,x1,x2
10006293     // ori x5,x0,0x100
00522333     // slt x6,x4,x5
ABC30393     // addi x7,x6,0xfffffabc
0063F433     // and  x8,x7,x6
007464B3     // or x9,x8,x7
0084C533     // xor x10,x9,x8       #5-11，数据冒险，先写后读
0340016F     // jal x2,L1           #无条件跳转，流水线清空
00106613     // ori x12, zero, 1
00106713     // ori x14, zero, 1
00006A13     // ori x20, zero, 0
400007B3     // sub x15, zero, zero  # 循环计数
40000833     // sub x16, zero, zero  # 结果寄存器赋0
01470833     // loop: add x16, x14, x20
000A0713     //       addi x14, x20, 0
00080A13     //       addi x20, x16, 0    #数据冒险，数据相关
00178793     //       addi x15, x15, 1
00D7A8B3     //       slt x17, x15, x13
FEC886E3     //       beq x17,x12, loop  #控制冒险
00C0006F     //       j end
00A06693     // L1: ori x13, zero, 10    # 循环次数赋值
000105E7     //     jalr x11,x2,0
10014937     // end: lui x18,0x10014     #结果存入地址
01092223     //      sw x16,4(x18)       #结果存入
00492983     //      lw x19,4(x18)       #取出
01392423     //      sw x19,8(x18)       #数据冒险，Load_Store